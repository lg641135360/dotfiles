#  ____ _____
# |  _ \_   _|  Derek Taylor (DistroTube)
# | | | || |    http://www.youtube.com/c/DistroTube
# | |_| || |    http://www.gitlab.com/dwt1/
# |____/ |_|
#
# Optimized for NVIDIA RTX 4060 Ti - Balance Performance & Aesthetics
# GPU-accelerated rendering with modern visual effects

# Specify the backend to use: `xrender`, `glx`, or `egl`.
# GLX for GPU acceleration on NVIDIA hardware
backend = "glx"

# Enabled client-side shadows on windows. Note desktop windows
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow,
# unless explicitly requested using the wintypes option.
#
shadow = true;

# The blur radius for shadows, in pixels. (defaults to 12)
shadow-radius = 10;

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
shadow-opacity = 0.75;

# The left offset for shadows, in pixels. (defaults to -15)
shadow-offset-x = -7;

# The top offset for shadows, in pixels. (defaults to -15)
shadow-offset-y = -7;

# Shadow color (RGB values 0.0-1.0)
shadow-color = "#111111";

# Specify a list of conditions of windows that should have no shadow.
#
# examples:
#   shadow-exclude = "n:e:Notification";
#
# shadow-exclude = []
shadow-exclude = [
  "name = 'Notification'",
  "class_g = 'Conky'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "class_g = 'slop'",
  "class_g = 'Polybar'",
  "class_g = 'trayer'",
  "override_redirect = true",
  "_GTK_FRAME_EXTENTS@"
];

corner-radius = 8;
detect-rounded-corners = true;

# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.
# fading = false
fading = true;

# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
# fade-in-step = 0.028
# Smoother animation with smaller steps for more frames
fade-in-step = 0.02;

# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)
# fade-out-step = 0.03
fade-out-step = 0.02;

# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
# fade-delta = 10
# Faster updates for smoother animation
fade-delta = 4;

# Specify a list of conditions of windows that should not be faded.
# don't need this, we disable fading for all normal windows with wintypes: {}
fade-exclude = [
  "class_g = 'slop'"   # maim
]

# No fading on window open/close (commented, letting fade settings work)
# no-fading-openclose = true;

# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
# inactive-opacity = 0.8
inactive-opacity = 1.00

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
# frame-opacity = 1.0
frame-opacity = 1.00

# Default opacity for dropdown menus and popup menus. (0.0 - 1.0, defaults to 1.0)
# menu-opacity = 1.0
# menu-opacity is depreciated use dropdown-menu and popup-menu instead.

#If using these 2 below change their values in line 510 & 511 aswell
popup_menu = { opacity = 1.0; }
dropdown_menu = { opacity = 1.0; }


# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.
# inactive-opacity-override = true
inactive-opacity-override = false;

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 1.00

# Specify a list of conditions of windows that should always be considered focused.
# focus-exclude = []
focus-exclude = [
  "class_g = 'Cairo-clock'",
  "class_g = 'Bar'",                    # lemonbar
  "class_g = 'slop'",                    # maim
  "class_g = 'trayer'"                  # trayer
];

opacity-rule = [
  "100:class_g    = 'XTerm'",
  "100:class_g    = 'URxvt'",
  "100:class_g    = 'firefox'",
  "100:class_g    = 'Thunderbird'"
];

wintypes:
{
  normal = { fade = true; shadow = true; }
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; fade = true; }
  dnd = { shadow = true; fade = true; }
  popup_menu = { opacity = 1.0; fade = true; }
  dropdown_menu = { opacity = 1.0; fade = true; }
};

# ===================== Performance & Aesthetics Optimization =====================

# Enable V-Sync for smooth, tear-free rendering
vsync = true;

# Mark wmwin focused for better window tracking
mark-wmwin-focused = false;
mark-ovredir-focused = true;

# Detect transient windows
detect-transient = true;

# Detect client leader windows
detect-client-leader = true;

# Use damage tracking to only redraw changed areas
use-damage = true;

# Detect client opacity
detect-client-opacity = true;

# GLX backend options optimized for NVIDIA GPUs
glx-copy-from-front = false;
glx-use-copysubbuffermesa = true;
glx-swap-method = 2;

# EWMH active window tracking
use-ewmh-active-win = true;

# Blur effect for modern aesthetics (GPU accelerated)
# blur-method = "dual_kawase";
# blur-strength = 10;
# blur-kern = "11x11gaussian";

# Blur background of semi-transparent / ARGB windows
blur-background = false;

# Blur background of windows when the window frame is not opaque
blur-background-frame = false;

# Exceptions to blur
blur-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "class_g = 'slop'",
  "class_g = 'maim'"
];

# Refocus and unredir settings
unredir-if-possible = false;

# Max brightness
max-brightness = 1.0;

# ===================== Animations (picom-pijulius-next-git) =====================

# Window animations using new animation system
animations = (
  # Open window animation - zoom in with bounce
  {
    triggers = ["open"];
    opacity = {
      curve = "cubic-bezier(0.24, 0.64, 0.79, 0.98)";
      duration = 0.3;
      start = 0;
      end = "window-raw-opacity";
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height";
    scale-x = {
      curve = "cubic-bezier(0.34, 1.56, 0.64, 1)";
      duration = 0.3;
      start = 0.6;
      end = 1;
    };
    scale-y = "scale-x";
    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  },
  # Close window animation - squeeze and fade
  {
    triggers = ["close"];
    opacity = {
      curve = "linear";
      duration = 0.25;
      start = "window-raw-opacity-before";
      end = 0;
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height";
    scale-x = {
      curve = "cubic-bezier(0.21, 0.02, 0.76, 0.36)";
      duration = 0.25;
      start = 1;
      end = 0.5;
    };
    scale-y = "scale-x";
    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  },
  # Geometry change - smooth resize/move
  {
    triggers = ["geometry"];
    scale-x = {
      curve = "cubic-bezier(0.34, 1.26, 0.64, 1)";
      duration = 0.25;
      start = "window-width-before / window-width";
      end = 1;
    };
    scale-y = {
      curve = "cubic-bezier(0.34, 1.26, 0.64, 1)";
      duration = 0.25;
      start = "window-height-before / window-height";
      end = 1;
    };
    offset-x = {
      curve = "cubic-bezier(0.34, 1.26, 0.64, 1)";
      duration = 0.25;
      start = "window-x-before - window-x";
      end = 0;
    };
    offset-y = {
      curve = "cubic-bezier(0.34, 1.26, 0.64, 1)";
      duration = 0.25;
      start = "window-y-before - window-y";
      end = 0;
    };
    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  }
)
